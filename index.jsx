import React, { useState, useEffect } from 'react';
const { useStoredState } = hatch;

const StartupTycoon = () => {
  const [showMenu, setShowMenu] = useState(true);
  const [gameStarted, setGameStarted] = useState(false);
  const [menuTab, setMenuTab] = useState('main'); // main, faq
  
  const [gameState, setGameState] = useStoredState('startupTycoon', {
    resources: {
      code: 100,
      ideas: 50,
      money: 1000,
      reputation: 10,
      energy: 80
    },
    skills: {
      frontend: 1,
      backend: 1,
      design: 0,
      marketing: 0,
      management: 0
    },
    company: {
      stage: 'solo', // solo -> freelancer -> mvp -> startup -> company -> corporation
      employees: 0,
      products: 0,
      users: 0,
      revenue: 0
    },
    buildings: {
      workspace: 1,
      computer: 1,
      coffee: 0,
      office: 0,
      server: 0,
      lab: 0,
      marketing: 0
    },
    day: 1,
    level: 1,
    exp: 0,
    difficulty: 'normal' // easy, normal, hard
  });

  const [selectedBuilding, setSelectedBuilding] = useState(null);
  const [events, setEvents] = useState([]);
  const [gameTime, setGameTime] = useState(0);

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω–∞—è –∏–≥—Ä–∞
  const hasSavedGame = gameState.day > 1 || gameState.company.products > 0 || gameState.resources.money !== 1000;
  
  // –û–±–µ—Å–ø–µ—á–∏–≤–∞–µ–º —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å —Å–æ —Å—Ç–∞—Ä—ã–º–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è–º–∏
  const currentDifficulty = gameState.difficulty || 'normal';

  // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏
  const difficultySettings = {
    easy: {
      name: 'üòä –õ—ë–≥–∫–∏–π',
      description: '–ë–æ–ª—å—à–µ —Ä–µ—Å—É—Ä—Å–æ–≤, –º–µ–Ω—å—à–µ —Ä–∞—Å—Ö–æ–¥–æ–≤, –±–æ–ª—å—à–µ —Å–æ–±—ã—Ç–∏–π',
      startResources: { code: 200, ideas: 100, money: 2000, reputation: 20, energy: 100 },
      multipliers: { income: 1.5, expenses: 0.7, events: 1.3 }
    },
    normal: {
      name: '‚öñÔ∏è –û–±—ã—á–Ω—ã–π',
      description: '–°–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –∏–≥—Ä–∞ –¥–ª—è –≤—Å–µ—Ö',
      startResources: { code: 100, ideas: 50, money: 1000, reputation: 10, energy: 80 },
      multipliers: { income: 1.0, expenses: 1.0, events: 1.0 }
    },
    hard: {
      name: 'üò§ –°–ª–æ–∂–Ω—ã–π',
      description: '–ú–µ–Ω—å—à–µ —Ä–µ—Å—É—Ä—Å–æ–≤, –±–æ–ª—å—à–µ —Ä–∞—Å—Ö–æ–¥–æ–≤, —Å—É—Ä–æ–≤—ã–µ —Å–æ–±—ã—Ç–∏—è',
      startResources: { code: 50, ideas: 25, money: 500, reputation: 5, energy: 60 },
      multipliers: { income: 0.8, expenses: 1.3, events: 0.8 }
    }
  };

  const startNewGame = (difficulty = 'normal') => {
    const settings = difficultySettings[difficulty];
    setGameState({
      resources: { ...settings.startResources },
      skills: {
        frontend: 1,
        backend: 1,
        design: 0,
        marketing: 0,
        management: 0
      },
      company: {
        stage: 'solo',
        employees: 0,
        products: 0,
        users: 0,
        revenue: 0
      },
      buildings: {
        workspace: 1,
        computer: 1,
        coffee: 0,
        office: 0,
        server: 0,
        lab: 0,
        marketing: 0
      },
      day: 1,
      level: 1,
      exp: 0,
      difficulty: difficulty
    });
    setEvents([]);
    setGameTime(0);
    setShowMenu(false);
    setGameStarted(true);
  };

  const continueGame = () => {
    setShowMenu(false);
    setGameStarted(true);
  };

  const returnToMenu = () => {
    setShowMenu(true);
    setGameStarted(false);
  };

  const buildings = {
    workspace: { 
      name: '–†–∞–±–æ—á–µ–µ –º–µ—Å—Ç–æ', 
      cost: { money: 500, ideas: 5 }, 
      effect: '+10 –∫–æ–¥/–¥–µ–Ω—å',
      icon: 'üíª'
    },
    computer: { 
      name: '–ú–æ—â–Ω—ã–π –∫–æ–º–ø', 
      cost: { money: 2000, code: 50 }, 
      effect: '+15 –∫–æ–¥/–¥–µ–Ω—å, +5 —ç–Ω–µ—Ä–≥–∏—è',
      icon: 'üñ•Ô∏è'
    },
    coffee: { 
      name: '–ö–æ—Ñ–µ-–º–∞—à–∏–Ω–∞', 
      cost: { money: 800, energy: 10 }, 
      effect: '+20 —ç–Ω–µ—Ä–≥–∏–∏/–¥–µ–Ω—å',
      icon: '‚òï'
    },
    office: { 
      name: '–û—Ñ–∏—Å', 
      cost: { money: 10000, reputation: 25 }, 
      effect: '–ú–æ–∂–Ω–æ –Ω–∞–Ω–∏–º–∞—Ç—å –¥–æ 5 —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤',
      icon: 'üè¢'
    },
    server: { 
      name: '–°–µ—Ä–≤–µ—Ä', 
      cost: { money: 5000, code: 200 }, 
      effect: '+50% –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø—Ä–æ–¥—É–∫—Ç–æ–≤',
      icon: 'üñ≤Ô∏è'
    },
    lab: { 
      name: 'R&D –ª–∞–±–∞', 
      cost: { money: 15000, ideas: 100 }, 
      effect: '+25 –∏–¥–µ–π/–¥–µ–Ω—å',
      icon: 'üî¨'
    },
    marketing: { 
      name: '–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥ –æ—Ç–¥–µ–ª', 
      cost: { money: 8000, reputation: 15 }, 
      effect: '+10 —Ä–µ–ø—É—Ç–∞—Ü–∏—è/–¥–µ–Ω—å',
      icon: 'üìà'
    }
  };

  const randomEvents = [
    {
      title: 'üèÜ –•–∞–∫–∞—Ç–æ–Ω',
      description: '–í—ã –ø–æ–±–µ–¥–∏–ª–∏ –≤ —Ö–∞–∫–∞—Ç–æ–Ω–µ!',
      effect: () => ({ code: 100, ideas: 50, reputation: 10 })
    },
    {
      title: 'üí∞ –ò–Ω–≤–µ—Å—Ç–æ—Ä',
      description: '–ò–Ω–≤–µ—Å—Ç–æ—Ä –∑–∞–∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞–ª—Å—è –≤–∞—à–∏–º –ø—Ä–æ–µ–∫—Ç–æ–º',
      effect: () => ({ money: 5000, reputation: 15 })
    },
    {
      title: 'üêõ –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π –±–∞–≥',
      description: '–í –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π –±–∞–≥',
      effect: () => ({ code: -50, reputation: -5, energy: -20 })
    },
    {
      title: 'üî• –í–∏—Ä—É—Å–Ω–æ—Å—Ç—å',
      description: '–í–∞—à –ø–æ—Å—Ç –≤ —Å–æ—Ü—Å–µ—Ç—è—Ö —Å—Ç–∞–ª –≤–∏—Ä—É—Å–Ω—ã–º!',
      effect: () => ({ reputation: 20, users: 1000 })
    },
    {
      title: 'üéØ –ù–æ–≤–∞—è –∏–¥–µ—è',
      description: '–í–æ –≤—Ä–µ–º—è –¥—É—à–∞ –ø—Ä–∏—à–ª–∞ –≥–µ–Ω–∏–∞–ª—å–Ω–∞—è –∏–¥–µ—è!',
      effect: () => ({ ideas: 75, energy: 10 })
    },
    {
      title: 'üíª –í—ã–≥–æ—Ä–∞–Ω–∏–µ',
      description: '–í—ã —á—É–≤—Å—Ç–≤—É–µ—Ç–µ —É—Å—Ç–∞–ª–æ—Å—Ç—å –æ—Ç –∫–æ–¥–∏–Ω–≥–∞',
      effect: () => ({ energy: -30, code: -25 })
    },
    {
      title: 'üì± –ö–æ–Ω–∫—É—Ä–µ–Ω—Ç',
      description: '–ö–æ–Ω–∫—É—Ä–µ–Ω—Ç –∑–∞–ø—É—Å—Ç–∏–ª –ø–æ—Ö–æ–∂–∏–π –ø—Ä–æ–¥—É–∫—Ç',
      effect: () => ({ users: -500, reputation: -10 })
    }
  ];

  useEffect(() => {
    if (!gameStarted) return;
    
    const interval = setInterval(() => {
      setGameTime(prev => prev + 1);
      
      if (gameTime % 10 === 0) { // –ö–∞–∂–¥—ã–µ 10 —Å–µ–∫—É–Ω–¥ = –Ω–æ–≤—ã–π –¥–µ–Ω—å
        advanceDay();
      }
      
      if (gameTime % 30 === 0 && Math.random() < 0.3 * difficultySettings[currentDifficulty].multipliers.events) {
        triggerRandomEvent();
      }
    }, 1000);

    return () => clearInterval(interval);
  }, [gameTime, gameStarted]);

  const advanceDay = () => {
    setGameState(prev => {
      const newState = { ...prev };
      const difficulty = difficultySettings[prev.difficulty || 'normal'];
      newState.day += 1;
      
      // –ë–∞–∑–æ–≤–æ–µ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ (–Ω–∞–≤—ã–∫–∏ –≤–ª–∏—è—é—Ç –Ω–∞ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ)
      const baseCodeGen = (5 + (prev.skills.frontend + prev.skills.backend) * 3 + prev.skills.management * 2) * difficulty.multipliers.income;
      const baseIdeasGen = (2 + prev.skills.design * 3 + prev.skills.marketing * 1) * difficulty.multipliers.income;
      
      newState.resources.code += Math.floor(baseCodeGen);
      newState.resources.ideas += Math.floor(baseIdeasGen);
      newState.resources.energy += 10;
      
      // –ü—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ –æ—Ç –∑–¥–∞–Ω–∏–π
      newState.resources.code += Math.floor(prev.buildings.workspace * 10 * difficulty.multipliers.income);
      newState.resources.code += Math.floor(prev.buildings.computer * 15 * difficulty.multipliers.income);
      newState.resources.energy += prev.buildings.coffee * 20;
      newState.resources.energy += prev.buildings.computer * 5;
      newState.resources.ideas += Math.floor(prev.buildings.lab * 25 * difficulty.multipliers.income);
      newState.resources.reputation += prev.buildings.marketing * 10;
      
      // –ü—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ –æ—Ç —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ (–º–µ–Ω–µ–¥–∂–º–µ–Ω—Ç —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å)
      const managementBonus = 1 + (prev.skills.management * 0.15); // +15% –∑–∞ —É—Ä–æ–≤–µ–Ω—å –º–µ–Ω–µ–¥–∂–º–µ–Ω—Ç–∞
      newState.resources.code += Math.floor(prev.company.employees * 20 * difficulty.multipliers.income * managementBonus);
      newState.resources.ideas += Math.floor(prev.company.employees * 5 * difficulty.multipliers.income * managementBonus);
      
      // –î–æ—Ö–æ–¥—ã –æ—Ç –ø—Ä–æ–¥—É–∫—Ç–æ–≤ (–º–∞—Ä–∫–µ—Ç–∏–Ω–≥ —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç –¥–æ—Ö–æ–¥)
      if (prev.company.products > 0) {
        const baseRevenue = prev.company.users * 0.1 * difficulty.multipliers.income;
        const serverBonus = prev.buildings.server > 0 ? 1.5 : 1;
        const marketingBonus = 1 + (prev.skills.marketing * 0.1); // +10% –∑–∞ —É—Ä–æ–≤–µ–Ω—å –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–∞
        const revenue = Math.floor(baseRevenue * serverBonus * marketingBonus);
        newState.company.revenue += revenue;
        newState.resources.money += revenue;
      }
      
      // –†–∞—Å—Ö–æ–¥—ã (—Å —É—á—ë—Ç–æ–º —Å–ª–æ–∂–Ω–æ—Å—Ç–∏)
      newState.resources.energy -= prev.company.employees * 5;
      newState.resources.money -= Math.floor(prev.company.employees * 100 * difficulty.multipliers.expenses);
      newState.resources.money -= Math.floor(prev.buildings.office * 500 * difficulty.multipliers.expenses);
      
      // –ü—Ä–æ–≥—Ä–µ—Å—Å–∏—è —É—Ä–æ–≤–Ω—è
      newState.exp += 10 + prev.company.employees * 2;
      if (newState.exp >= newState.level * 100) {
        newState.level += 1;
        newState.exp = 0;
        // –ë–æ–Ω—É—Å –∑–∞ —É—Ä–æ–≤–µ–Ω—å
        newState.resources.ideas += 20;
        newState.resources.reputation += 5;
      }
      
      // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞–¥–∏–π —Ä–∞–∑–≤–∏—Ç–∏—è
      if (prev.company.stage === 'solo' && newState.resources.money >= 5000) {
        newState.company.stage = 'freelancer';
      }
      if (prev.company.stage === 'freelancer' && newState.company.products >= 1) {
        newState.company.stage = 'mvp';
      }
      if (prev.company.stage === 'mvp' && newState.company.employees >= 2) {
        newState.company.stage = 'startup';
      }
      if (prev.company.stage === 'startup' && newState.company.employees >= 10) {
        newState.company.stage = 'company';
      }
      if (prev.company.stage === 'company' && newState.resources.money >= 100000) {
        newState.company.stage = 'corporation';
      }
      
      // –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è —Ä–µ—Å—É—Ä—Å–æ–≤
      Object.keys(newState.resources).forEach(resource => {
        newState.resources[resource] = Math.max(0, Math.min(999999, newState.resources[resource]));
      });
      
      return newState;
    });
  };

  const triggerRandomEvent = () => {
    const event = randomEvents[Math.floor(Math.random() * randomEvents.length)];
    const effect = event.effect();
    
    setEvents(prev => [event, ...prev.slice(0, 2)]);
    
    setGameState(prev => {
      const newState = { ...prev };
      Object.keys(effect).forEach(key => {
        if (key === 'users') {
          newState.company.users += effect[key];
        } else if (newState.resources[key] !== undefined) {
          newState.resources[key] += effect[key];
        }
      });
      return newState;
    });
  };

  const canBuild = (buildingType) => {
    const building = buildings[buildingType];
    return Object.keys(building.cost).every(resource => 
      gameState.resources[resource] >= building.cost[resource]
    );
  };

  const buildStructure = (buildingType) => {
    if (!canBuild(buildingType)) return;

    setGameState(prev => {
      const newState = { ...prev };
      const building = buildings[buildingType];
      
      // –°–ø–∏—Å–∞–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–æ–≤
      Object.keys(building.cost).forEach(resource => {
        newState.resources[resource] -= building.cost[resource];
      });
      
      // –°—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ
      newState.buildings[buildingType] += 1;
      
      return newState;
    });
  };

  const learnSkill = (skill) => {
    const cost = (gameState.skills[skill] + 1) * 50;
    if (gameState.resources.code >= cost && gameState.resources.ideas >= cost / 2) {
      setGameState(prev => ({
        ...prev,
        resources: {
          ...prev.resources,
          code: prev.resources.code - cost,
          ideas: prev.resources.ideas - cost / 2
        },
        skills: {
          ...prev.skills,
          [skill]: prev.skills[skill] + 1
        }
      }));
    }
  };

  const createProduct = () => {
    const cost = { code: 200, ideas: 100, money: 1000 };
    if (Object.keys(cost).every(res => gameState.resources[res] >= cost[res])) {
      setGameState(prev => {
        // –î–∏–∑–∞–π–Ω –∏ –º–∞—Ä–∫–µ—Ç–∏–Ω–≥ –≤–ª–∏—è—é—Ç –Ω–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –Ω–æ–≤–æ–≥–æ –ø—Ä–æ–¥—É–∫—Ç–∞
        const baseUsers = 100;
        const designBonus = 1 + (prev.skills.design * 0.2); // +20% –∑–∞ —É—Ä–æ–≤–µ–Ω—å –¥–∏–∑–∞–π–Ω–∞
        const marketingBonus = 1 + (prev.skills.marketing * 0.15); // +15% –∑–∞ —É—Ä–æ–≤–µ–Ω—å –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–∞
        const newUsers = Math.floor(baseUsers * designBonus * marketingBonus);
        
        return {
          ...prev,
          resources: {
            ...prev.resources,
            code: prev.resources.code - cost.code,
            ideas: prev.resources.ideas - cost.ideas,
            money: prev.resources.money - cost.money
          },
          company: {
            ...prev.company,
            products: prev.company.products + 1,
            users: prev.company.users + newUsers
          }
        };
      });
    }
  };

  const hireEmployee = () => {
    const cost = 2000 + gameState.company.employees * 500;
    if (gameState.resources.money >= cost && gameState.resources.reputation >= 10) {
      setGameState(prev => ({
        ...prev,
        resources: {
          ...prev.resources,
          money: prev.resources.money - cost,
          reputation: prev.resources.reputation - 10
        },
        company: {
          ...prev.company,
          employees: prev.company.employees + 1
        }
      }));
    }
  };

  const getStatusColor = (value, max) => {
    const percentage = (value / max) * 100;
    if (percentage > 70) return 'text-green-500';
    if (percentage > 30) return 'text-yellow-500';
    return 'text-red-500';
  };

  // FAQ –∫–æ–Ω—Ç–µ–Ω—Ç
  const renderFAQ = () => (
    <div className="text-left max-w-4xl mx-auto">
      <h2 className="text-3xl font-bold text-blue-400 mb-6 text-center">‚ùì FAQ –∏ –ì–∞–π–¥ –ø–æ –∏–≥—Ä–µ</h2>
      
      <div className="space-y-6">
        <div className="bg-gray-800 p-6 rounded-lg">
          <h3 className="text-xl font-bold text-green-400 mb-3">üéØ –ß—Ç–æ –¥–∞—é—Ç –Ω–∞–≤—ã–∫–∏?</h3>
          <div className="space-y-3 text-sm">
            <div><strong>üíª Frontend:</strong> +3 –∫–æ–¥–∞ –≤ –¥–µ–Ω—å –∑–∞ —É—Ä–æ–≤–µ–Ω—å</div>
            <div><strong>‚öôÔ∏è Backend:</strong> +3 –∫–æ–¥–∞ –≤ –¥–µ–Ω—å –∑–∞ —É—Ä–æ–≤–µ–Ω—å</div>
            <div><strong>üé® Design:</strong> +3 –∏–¥–µ–∏ –≤ –¥–µ–Ω—å –∑–∞ —É—Ä–æ–≤–µ–Ω—å + 20% –±–æ–ª—å—à–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø—Ä–æ–¥—É–∫—Ç–∞</div>
            <div><strong>üìà Marketing:</strong> +1 –∏–¥–µ—è –≤ –¥–µ–Ω—å –∑–∞ —É—Ä–æ–≤–µ–Ω—å + 10% –¥–æ—Ö–æ–¥ —Å –ø—Ä–æ–¥—É–∫—Ç–æ–≤ + 15% –±–æ–ª—å—à–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π</div>
            <div><strong>üëî Management:</strong> +2 –∫–æ–¥–∞ –≤ –¥–µ–Ω—å –∑–∞ —É—Ä–æ–≤–µ–Ω—å + 15% —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤</div>
          </div>
        </div>

        <div className="bg-gray-800 p-6 rounded-lg">
          <h3 className="text-xl font-bold text-purple-400 mb-3">üöÄ –°—Ç–∞–¥–∏–∏ —Ä–∞–∑–≤–∏—Ç–∏—è</h3>
          <div className="space-y-2 text-sm">
            <div><strong>üßë‚Äçüíª –°–æ–ª–æ-—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫:</strong> –ò–∑—É—á–∞–π—Ç–µ –Ω–∞–≤—ã–∫–∏, –Ω–∞–∫–∞–ø–ª–∏–≤–∞–π—Ç–µ —Ä–µ—Å—É—Ä—Å—ã</div>
            <div><strong>üíº –§—Ä–∏–ª–∞–Ω—Å–µ—Ä:</strong> –ù–∞–∫–æ–ø–∏—Ç–µ $5000 –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞</div>
            <div><strong>üöÄ MVP:</strong> –°–æ–∑–¥–∞–π—Ç–µ –ø–µ—Ä–≤—ã–π –ø—Ä–æ–¥—É–∫—Ç (200 –∫–æ–¥, 100 –∏–¥–µ–π, $1000)</div>
            <div><strong>‚≠ê –°—Ç–∞—Ä—Ç–∞–ø:</strong> –ù–∞–π–º–∏—Ç–µ 2+ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤</div>
            <div><strong>üè¢ –ö–æ–º–ø–∞–Ω–∏—è:</strong> –†–∞—Å—à–∏—Ä—å—Ç–µ—Å—å –¥–æ 10+ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤</div>
            <div><strong>üåç –ö–æ—Ä–ø–æ—Ä–∞—Ü–∏—è:</strong> –ù–∞–∫–æ–ø–∏—Ç–µ $100,000 –∫–∞–ø–∏—Ç–∞–ª–∞</div>
          </div>
        </div>

        <div className="bg-gray-800 p-6 rounded-lg">
          <h3 className="text-xl font-bold text-yellow-400 mb-3">üí∞ –ö–∞–∫ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –¥–µ–Ω—å–≥–∏?</h3>
          <div className="space-y-2 text-sm">
            <div><strong>–ü—Ä–æ–¥—É–∫—Ç—ã:</strong> –ö–∞–∂–¥—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–∏–Ω–æ—Å–∏—Ç $0.1 –≤ –¥–µ–Ω—å</div>
            <div><strong>–°–µ—Ä–≤–µ—Ä:</strong> –£–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç –¥–æ—Ö–æ–¥ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –Ω–∞ 50%</div>
            <div><strong>–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥:</strong> +10% –¥–æ—Ö–æ–¥ –∑–∞ –∫–∞–∂–¥—ã–π —É—Ä–æ–≤–µ–Ω—å –Ω–∞–≤—ã–∫–∞</div>
            <div><strong>–°–æ–±—ã—Ç–∏—è:</strong> –ò–Ω–≤–µ—Å—Ç–æ—Ä—ã, —Ö–∞–∫–∞—Ç–æ–Ω—ã, –≤–∏—Ä—É—Å–Ω—ã–µ –ø–æ—Å—Ç—ã</div>
            <div><strong>–°–æ–≤–µ—Ç:</strong> –°–æ–∑–¥–∞–≤–∞–π—Ç–µ –ø—Ä–æ–¥—É–∫—Ç—ã ‚Üí –ø–æ–ª—É—á–∞–π—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π ‚Üí –¥–æ—Ö–æ–¥ —Ä–∞—Å—Ç–µ—Ç</div>
          </div>
        </div>

        <div className="bg-gray-800 p-6 rounded-lg">
          <h3 className="text-xl font-bold text-red-400 mb-3">üèóÔ∏è –û–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ –∏ –ø–æ—Å—Ç—Ä–æ–π–∫–∏</h3>
          <div className="space-y-2 text-sm">
            <div><strong>üíª –†–∞–±–æ—á–µ–µ –º–µ—Å—Ç–æ:</strong> +10 –∫–æ–¥/–¥–µ–Ω—å ($500, 5 –∏–¥–µ–π)</div>
            <div><strong>üñ•Ô∏è –ú–æ—â–Ω—ã–π –∫–æ–º–ø:</strong> +15 –∫–æ–¥/–¥–µ–Ω—å, +5 —ç–Ω–µ—Ä–≥–∏—è ($2000, 50 –∫–æ–¥)</div>
            <div><strong>‚òï –ö–æ—Ñ–µ-–º–∞—à–∏–Ω–∞:</strong> +20 —ç–Ω–µ—Ä–≥–∏—è/–¥–µ–Ω—å ($800, 10 —ç–Ω–µ—Ä–≥–∏—è)</div>
            <div><strong>üè¢ –û—Ñ–∏—Å:</strong> –ü–æ–∑–≤–æ–ª—è–µ—Ç –Ω–∞–Ω–∏–º–∞—Ç—å –¥–æ 5 —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ ($10000, 25 —Ä–µ–ø—É—Ç–∞—Ü–∏—è)</div>
            <div><strong>üñ≤Ô∏è –°–µ—Ä–≤–µ—Ä:</strong> +50% –¥–æ—Ö–æ–¥ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π ($5000, 200 –∫–æ–¥)</div>
            <div><strong>üî¨ R&D –ª–∞–±–∞:</strong> +25 –∏–¥–µ–π/–¥–µ–Ω—å ($15000, 100 –∏–¥–µ–π)</div>
            <div><strong>üìà –ú–∞—Ä–∫–µ—Ç–∏–Ω–≥ –æ—Ç–¥–µ–ª:</strong> +10 —Ä–µ–ø—É—Ç–∞—Ü–∏—è/–¥–µ–Ω—å ($8000, 15 —Ä–µ–ø—É—Ç–∞—Ü–∏—è)</div>
          </div>
        </div>

        <div className="bg-gray-800 p-6 rounded-lg">
          <h3 className="text-xl font-bold text-blue-400 mb-3">üí° –°–æ–≤–µ—Ç—ã –ø–æ –∏–≥—Ä–µ</h3>
          <div className="space-y-2 text-sm">
            <div>‚Ä¢ <strong>–ù–∞—á–∞–ª–æ:</strong> –ü—Ä–æ–∫–∞—á–∏–≤–∞–π—Ç–µ Frontend –∏ Backend –¥–ª—è –±–æ–ª—å—à–µ–≥–æ –∫–æ–¥–∞</div>
            <div>‚Ä¢ <strong>–î–µ–Ω—å–≥–∏:</strong> –°–æ–∑–¥–∞–≤–∞–π—Ç–µ –ø—Ä–æ–¥—É–∫—Ç—ã –∫–∞–∫ –º–æ–∂–Ω–æ —Ä–∞–Ω—å—à–µ –¥–ª—è –¥–æ—Ö–æ–¥–∞</div>
            <div>‚Ä¢ <strong>–ö–æ–º–∞–Ω–¥–∞:</strong> –ù–∞–Ω–∏–º–∞–π—Ç–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ —Ç–æ–ª—å–∫–æ –∫–æ–≥–¥–∞ –µ—Å—Ç—å —Å—Ç–∞–±–∏–ª—å–Ω—ã–π –¥–æ—Ö–æ–¥</div>
            <div>‚Ä¢ <strong>–î–∏–∑–∞–π–Ω:</strong> –ü—Ä–æ–∫–∞—á–∏–≤–∞–π—Ç–µ –ø–µ—Ä–µ–¥ —Å–æ–∑–¥–∞–Ω–∏–µ–º –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –¥–ª—è –±–æ–ª—å—à–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π</div>
            <div>‚Ä¢ <strong>–ú–µ–Ω–µ–¥–∂–º–µ–Ω—Ç:</strong> –í–∞–∂–µ–Ω –ø—Ä–∏ –±–æ–ª—å—à–æ–π –∫–æ–º–∞–Ω–¥–µ (+15% —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å)</div>
            <div>‚Ä¢ <strong>–≠–Ω–µ—Ä–≥–∏—è:</strong> –°–ª–µ–¥–∏—Ç–µ –∑–∞ —É—Ä–æ–≤–Ω–µ–º, –ø–æ–∫—É–ø–∞–π—Ç–µ –∫–æ—Ñ–µ-–º–∞—à–∏–Ω—ã</div>
          </div>
        </div>

        <div className="bg-gray-800 p-6 rounded-lg">
          <h3 className="text-xl font-bold text-orange-400 mb-3">üé≤ –°–ª—É—á–∞–π–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è</h3>
          <div className="space-y-2 text-sm">
            <div><strong>üèÜ –•–∞–∫–∞—Ç–æ–Ω:</strong> +100 –∫–æ–¥, +50 –∏–¥–µ–π, +10 —Ä–µ–ø—É—Ç–∞—Ü–∏—è</div>
            <div><strong>üí∞ –ò–Ω–≤–µ—Å—Ç–æ—Ä:</strong> +$5000, +15 —Ä–µ–ø—É—Ç–∞—Ü–∏—è</div>
            <div><strong>üî• –í–∏—Ä—É—Å–Ω–æ—Å—Ç—å:</strong> +20 —Ä–µ–ø—É—Ç–∞—Ü–∏—è, +1000 –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π</div>
            <div><strong>üéØ –ù–æ–≤–∞—è –∏–¥–µ—è:</strong> +75 –∏–¥–µ–π, +10 —ç–Ω–µ—Ä–≥–∏—è</div>
            <div><strong>üêõ –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π –±–∞–≥:</strong> -50 –∫–æ–¥, -5 —Ä–µ–ø—É—Ç–∞—Ü–∏—è, -20 —ç–Ω–µ—Ä–≥–∏—è</div>
            <div><strong>üíª –í—ã–≥–æ—Ä–∞–Ω–∏–µ:</strong> -30 —ç–Ω–µ—Ä–≥–∏—è, -25 –∫–æ–¥</div>
            <div><strong>üì± –ö–æ–Ω–∫—É—Ä–µ–Ω—Ç:</strong> -500 –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, -10 —Ä–µ–ø—É—Ç–∞—Ü–∏—è</div>
          </div>
        </div>
      </div>

      <div className="text-center mt-8">
        <button
          onClick={() => setMenuTab('main')}
          className="px-8 py-3 bg-blue-600 hover:bg-blue-500 rounded-lg font-bold text-lg transition-colors"
        >
          ‚Üê –ù–∞–∑–∞–¥ –∫ –º–µ–Ω—é
        </button>
      </div>
    </div>
  );

  // –°—Ç–∞—Ä—Ç–æ–≤–æ–µ –º–µ–Ω—é
  if (showMenu) {
    return (
      <div className="w-full h-full bg-gray-900 text-white p-4 overflow-auto">
        <div className="max-w-4xl mx-auto">
          {/* –¢–∞–±—ã –º–µ–Ω—é - –û–ß–ï–ù–¨ –ó–ê–ú–ï–¢–ù–´–ï */}
          <div className="flex justify-center mb-8">
            <div className="bg-gradient-to-r from-blue-900 to-purple-900 p-3 rounded-xl border-4 border-blue-500 shadow-2xl">
              <div className="flex gap-4">
                <button
                  onClick={() => setMenuTab('main')}
                  className={`px-10 py-4 rounded-xl font-black text-xl transition-all duration-300 transform ${
                    menuTab === 'main' 
                      ? 'bg-blue-500 text-white shadow-2xl scale-105 border-2 border-white' 
                      : 'bg-gray-800 text-gray-200 hover:text-white hover:bg-gray-700 hover:scale-102 border-2 border-gray-600'
                  }`}
                >
                  üè† –ì–õ–ê–í–ù–ê–Ø
                </button>
                <button
                  onClick={() => setMenuTab('faq')}
                  className={`px-10 py-4 rounded-xl font-black text-xl transition-all duration-300 transform ${
                    menuTab === 'faq' 
                      ? 'bg-green-500 text-white shadow-2xl scale-105 border-2 border-white' 
                      : 'bg-gray-800 text-gray-200 hover:text-white hover:bg-gray-700 hover:scale-102 border-2 border-gray-600'
                  }`}
                >
                  ‚ùì FAQ & –ì–ê–ô–î
                </button>
              </div>
            </div>
          </div>

          {menuTab === 'faq' ? renderFAQ() : (
            <div className="text-center">
              <div className="mb-8">
                <h1 className="text-5xl font-bold text-blue-400 mb-4">üíª –°–¢–ê–†–¢–ê–ü –¢–ê–ô–ö–£–ù</h1>
                <h2 className="text-2xl text-gray-300 mb-6">–û—Ç –∫–æ–¥–∞ –∫ –∫–æ—Ä–ø–æ—Ä–∞—Ü–∏–∏</h2>
                <p className="text-lg text-gray-400 max-w-2xl mx-auto">
                  –ù–∞—á–Ω–∏—Ç–µ –∫–∞–∫ —Å–æ–ª–æ-—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ –∏ –ø–æ—Å—Ç—Ä–æ–π—Ç–µ IT-–∏–º–ø–µ—Ä–∏—é! –ò–∑—É—á–∞–π—Ç–µ –Ω–∞–≤—ã–∫–∏, —Å–æ–∑–¥–∞–≤–∞–π—Ç–µ –ø—Ä–æ–¥—É–∫—Ç—ã, 
                  –Ω–∞–Ω–∏–º–∞–π—Ç–µ –∫–æ–º–∞–Ω–¥—É –∏ —Å—Ç–∞–Ω—å—Ç–µ tech-–º–∞–≥–Ω–∞—Ç–æ–º.
                </p>
              </div>

          {hasSavedGame && (
            <div className="mb-8 p-6 bg-green-900 border border-green-600 rounded-lg">
              <h3 className="text-xl font-bold mb-4">üìä –°–æ—Ö—Ä–∞–Ω—ë–Ω–Ω–∞—è –∏–≥—Ä–∞</h3>
              <div className="grid grid-cols-2 md:grid-cols-4 gap-4 text-sm">
                <div>
                  <div className="text-gray-400">–î–µ–Ω—å</div>
                  <div className="font-bold">{gameState.day}</div>
                </div>
                <div>
                  <div className="text-gray-400">–°—Ç–∞–¥–∏—è</div>
                  <div className="font-bold">
                    {gameState.company.stage === 'solo' && 'üßë‚Äçüíª –°–æ–ª–æ'}
                    {gameState.company.stage === 'freelancer' && 'üíº –§—Ä–∏–ª–∞–Ω—Å–µ—Ä'}
                    {gameState.company.stage === 'mvp' && 'üöÄ MVP'}
                    {gameState.company.stage === 'startup' && '‚≠ê –°—Ç–∞—Ä—Ç–∞–ø'}
                    {gameState.company.stage === 'company' && 'üè¢ –ö–æ–º–ø–∞–Ω–∏—è'}
                    {gameState.company.stage === 'corporation' && 'üåç –ö–æ—Ä–ø–æ—Ä–∞—Ü–∏—è'}
                  </div>
                </div>
                <div>
                  <div className="text-gray-400">–î–µ–Ω—å–≥–∏</div>
                  <div className="font-bold">${gameState.resources.money}</div>
                </div>
                <div>
                  <div className="text-gray-400">–°–ª–æ–∂–Ω–æ—Å—Ç—å</div>
                  <div className="font-bold">{difficultySettings[currentDifficulty].name}</div>
                </div>
              </div>
              <button
                onClick={continueGame}
                className="mt-4 px-8 py-3 bg-green-600 hover:bg-green-500 rounded-lg font-bold text-lg transition-colors"
              >
                –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –∏–≥—Ä—É
              </button>
            </div>
          )}

          <div className="mb-8">
            <h3 className="text-2xl font-bold mb-6">–í—ã–±–µ—Ä–∏—Ç–µ —Å–ª–æ–∂–Ω–æ—Å—Ç—å</h3>
            <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
              {Object.entries(difficultySettings).map(([key, settings]) => (
                <div key={key} className="bg-gray-800 p-6 rounded-lg border-2 border-gray-700 hover:border-blue-500 transition-colors">
                  <div className="text-2xl mb-3">{settings.name}</div>
                  <p className="text-sm text-gray-400 mb-4">{settings.description}</p>
                  <div className="text-xs text-left space-y-1 mb-4">
                    <div><strong>–°—Ç–∞—Ä—Ç–æ–≤—ã–µ —Ä–µ—Å—É—Ä—Å—ã:</strong></div>
                    <div>üíª –ö–æ–¥: {settings.startResources.code}</div>
                    <div>üí° –ò–¥–µ–∏: {settings.startResources.ideas}</div>
                    <div>üí∞ –î–µ–Ω—å–≥–∏: ${settings.startResources.money}</div>
                    <div>‚≠ê –†–µ–ø—É—Ç–∞—Ü–∏—è: {settings.startResources.reputation}</div>
                  </div>
                  <button
                    onClick={() => startNewGame(key)}
                    className="w-full px-4 py-2 bg-blue-600 hover:bg-blue-500 rounded font-bold transition-colors"
                  >
                    –ù–∞—á–∞—Ç—å –∏–≥—Ä—É
                  </button>
                </div>
              ))}
            </div>
          </div>

              <div className="text-sm text-gray-500">
                <p>üí° –°–æ–≤–µ—Ç: –ù–∞—á–Ω–∏—Ç–µ —Å –ª—ë–≥–∫–æ–≥–æ —É—Ä–æ–≤–Ω—è, –µ—Å–ª–∏ –∏–≥—Ä–∞–µ—Ç–µ –≤–ø–µ—Ä–≤—ã–µ!</p>
              </div>
            </div>
          )}
        </div>
      </div>
    );
  }

  return (
    <div className="w-full h-full bg-gray-900 text-white p-4 overflow-auto">
      <div className="max-w-6xl mx-auto">
        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
        <div className="text-center mb-6">
          <div className="flex justify-between items-center mb-4">
            <button
              onClick={returnToMenu}
              className="px-4 py-2 bg-gray-700 hover:bg-gray-600 rounded text-sm transition-colors"
            >
              ‚Üê –ú–µ–Ω—é
            </button>
            <div className="text-sm text-gray-400">
              –°–ª–æ–∂–Ω–æ—Å—Ç—å: {difficultySettings[currentDifficulty].name}
            </div>
          </div>
          <h1 className="text-3xl font-bold text-blue-400 mb-2">üíª –°–¢–ê–†–¢–ê–ü –¢–ê–ô–ö–£–ù: –û–¢ –ö–û–î–ê –ö –ö–û–†–ü–û–†–ê–¶–ò–ò</h1>
          <div className="text-lg">
            –î–µ–Ω—å {gameState.day} | –£—Ä–æ–≤–µ–Ω—å {gameState.level} | 
            <span className="ml-2 px-2 py-1 bg-purple-600 rounded text-sm">
              {gameState.company.stage === 'solo' && 'üßë‚Äçüíª –°–æ–ª–æ-—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫'}
              {gameState.company.stage === 'freelancer' && 'üíº –§—Ä–∏–ª–∞–Ω—Å–µ—Ä'}
              {gameState.company.stage === 'mvp' && 'üöÄ MVP'}
              {gameState.company.stage === 'startup' && '‚≠ê –°—Ç–∞—Ä—Ç–∞–ø'}
              {gameState.company.stage === 'company' && 'üè¢ –ö–æ–º–ø–∞–Ω–∏—è'}
              {gameState.company.stage === 'corporation' && 'üåç –ö–æ—Ä–ø–æ—Ä–∞—Ü–∏—è'}
            </span>
          </div>
        </div>

        {/* –†–µ—Å—É—Ä—Å—ã */}
        <div className="grid grid-cols-5 gap-4 mb-6">
          <div className="bg-gray-800 p-3 rounded-lg text-center">
            <div className="text-2xl">üíª</div>
            <div className="text-sm text-gray-400">–ö–æ–¥</div>
            <div className={`text-xl font-bold ${getStatusColor(gameState.resources.code, 500)}`}>
              {gameState.resources.code}
            </div>
          </div>
          <div className="bg-gray-800 p-3 rounded-lg text-center">
            <div className="text-2xl">üí°</div>
            <div className="text-sm text-gray-400">–ò–¥–µ–∏</div>
            <div className={`text-xl font-bold ${getStatusColor(gameState.resources.ideas, 200)}`}>
              {gameState.resources.ideas}
            </div>
          </div>
          <div className="bg-gray-800 p-3 rounded-lg text-center">
            <div className="text-2xl">üí∞</div>
            <div className="text-sm text-gray-400">–î–µ–Ω—å–≥–∏</div>
            <div className={`text-xl font-bold ${getStatusColor(gameState.resources.money, 10000)}`}>
              ${gameState.resources.money}
            </div>
          </div>
          <div className="bg-gray-800 p-3 rounded-lg text-center">
            <div className="text-2xl">‚≠ê</div>
            <div className="text-sm text-gray-400">–†–µ–ø—É—Ç–∞—Ü–∏—è</div>
            <div className={`text-xl font-bold ${getStatusColor(gameState.resources.reputation, 100)}`}>
              {gameState.resources.reputation}
            </div>
          </div>
          <div className="bg-gray-800 p-3 rounded-lg text-center">
            <div className="text-2xl">‚ö°</div>
            <div className="text-sm text-gray-400">–≠–Ω–µ—Ä–≥–∏—è</div>
            <div className={`text-xl font-bold ${getStatusColor(gameState.resources.energy, 100)}`}>
              {gameState.resources.energy}
            </div>
          </div>
        </div>

        {/* –°—Ç–∞—Ç—É—Å –∫–æ–º–ø–∞–Ω–∏–∏ */}
        <div className="grid grid-cols-2 gap-4 mb-6">
          <div className="bg-gray-800 p-4 rounded-lg">
            <h3 className="text-xl font-bold mb-3">üìä –°—Ç–∞—Ç—É—Å –∫–æ–º–ø–∞–Ω–∏–∏</h3>
            <div className="space-y-2">
              <div className="flex justify-between">
                <span className="text-gray-400">–°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏:</span>
                <span className="font-bold text-blue-400">{gameState.company.employees}</span>
              </div>
              <div className="flex justify-between">
                <span className="text-gray-400">–ü—Ä–æ–¥—É–∫—Ç—ã:</span>
                <span className="font-bold text-green-400">{gameState.company.products}</span>
              </div>
              <div className="flex justify-between">
                <span className="text-gray-400">–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:</span>
                <span className="font-bold text-purple-400">{gameState.company.users.toLocaleString()}</span>
              </div>
              <div className="flex justify-between">
                <span className="text-gray-400">–î–æ—Ö–æ–¥:</span>
                <span className="font-bold text-yellow-400">${gameState.company.revenue}</span>
              </div>
            </div>
          </div>
          
          <div className="bg-gray-800 p-4 rounded-lg">
            <h3 className="text-xl font-bold mb-3">üéØ –ù–∞–≤—ã–∫–∏</h3>
            <div className="space-y-2">
              <div className="flex justify-between">
                <span className="text-gray-400">Frontend:</span>
                <span className="font-bold text-blue-400">LVL {gameState.skills.frontend}</span>
              </div>
              <div className="flex justify-between">
                <span className="text-gray-400">Backend:</span>
                <span className="font-bold text-green-400">LVL {gameState.skills.backend}</span>
              </div>
              <div className="flex justify-between">
                <span className="text-gray-400">Design:</span>
                <span className="font-bold text-purple-400">LVL {gameState.skills.design}</span>
              </div>
              <div className="flex justify-between">
                <span className="text-gray-400">Marketing:</span>
                <span className="font-bold text-red-400">LVL {gameState.skills.marketing}</span>
              </div>
              <div className="flex justify-between">
                <span className="text-gray-400">Management:</span>
                <span className="font-bold text-yellow-400">LVL {gameState.skills.management}</span>
              </div>
            </div>
          </div>
        </div>
        
        {/* –ü—Ä–æ–≥—Ä–µ—Å—Å —É—Ä–æ–≤–Ω—è */}
        <div className="bg-gray-800 p-4 rounded-lg mb-6">
          <h3 className="text-xl font-bold mb-3">üìà –ü—Ä–æ–≥—Ä–µ—Å—Å</h3>
          <div className="flex items-center gap-4">
            <span className="text-gray-400">EXP:</span>
            <div className="flex-1 bg-gray-700 rounded-full h-4">
              <div 
                className="bg-gradient-to-r from-blue-500 to-purple-500 h-4 rounded-full transition-all duration-300"
                style={{ width: `${(gameState.exp / (gameState.level * 100)) * 100}%` }}
              ></div>
            </div>
            <span className="font-bold text-blue-400">{gameState.exp}/{gameState.level * 100}</span>
          </div>
        </div>

        {/* –°–æ–±—ã—Ç–∏—è */}
        {events.length > 0 && (
          <div className="bg-purple-900 border border-purple-600 p-4 rounded-lg mb-6">
            <h3 className="text-xl font-bold mb-3">üì¢ –ü–æ—Å–ª–µ–¥–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è</h3>
            {events.map((event, index) => (
              <div key={index} className="mb-2 last:mb-0">
                <div className="font-bold">{event.title}</div>
                <div className="text-sm text-gray-300">{event.description}</div>
              </div>
            ))}
          </div>
        )}

        {/* –î–µ–π—Å—Ç–≤–∏—è */}
        <div className="grid grid-cols-1 lg:grid-cols-3 gap-6">
          {/* –ü—Ä–æ–∫–∞—á–∫–∞ –Ω–∞–≤—ã–∫–æ–≤ */}
          <div className="bg-gray-800 p-4 rounded-lg">
            <h3 className="text-xl font-bold mb-4">üéì –ü—Ä–æ–∫–∞—á–∫–∞ –Ω–∞–≤—ã–∫–æ–≤</h3>
            <div className="space-y-3">
              {Object.entries(gameState.skills).map(([skill, level]) => (
                <div key={skill} className="flex items-center justify-between bg-gray-700 p-3 rounded">
                  <div>
                    <div className="font-bold capitalize">{skill}</div>
                    <div className="text-xs text-gray-400">–£—Ä–æ–≤–µ–Ω—å {level}</div>
                    <div className="text-xs text-blue-400">
                      –°—Ç–æ–∏–º–æ—Å—Ç—å: {(level + 1) * 50} –∫–æ–¥, {(level + 1) * 25} –∏–¥–µ–π
                    </div>
                  </div>
                  <button
                    onClick={() => learnSkill(skill)}
                    disabled={gameState.resources.code < (level + 1) * 50 || gameState.resources.ideas < (level + 1) * 25}
                    className={`px-3 py-1 rounded text-sm font-bold transition-colors ${
                      gameState.resources.code >= (level + 1) * 50 && gameState.resources.ideas >= (level + 1) * 25
                        ? 'bg-blue-600 hover:bg-blue-500 text-white' 
                        : 'bg-gray-600 text-gray-400 cursor-not-allowed'
                    }`}
                  >
                    –ò–∑—É—á–∏—Ç—å
                  </button>
                </div>
              ))}
            </div>
          </div>

          {/* –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –∏ –Ω–∞–π–º */}
          <div className="bg-gray-800 p-4 rounded-lg">
            <h3 className="text-xl font-bold mb-4">üöÄ –†–∞–∑–≤–∏—Ç–∏–µ –±–∏–∑–Ω–µ—Å–∞</h3>
            <div className="space-y-3">
              <div className="bg-gray-700 p-3 rounded">
                <div className="font-bold">–°–æ–∑–¥–∞—Ç—å –ø—Ä–æ–¥—É–∫—Ç</div>
                <div className="text-xs text-gray-400">200 –∫–æ–¥, 100 –∏–¥–µ–π, $1000</div>
                <button
                  onClick={createProduct}
                  disabled={gameState.resources.code < 200 || gameState.resources.ideas < 100 || gameState.resources.money < 1000}
                  className={`mt-2 px-3 py-1 rounded text-sm font-bold transition-colors w-full ${
                    gameState.resources.code >= 200 && gameState.resources.ideas >= 100 && gameState.resources.money >= 1000
                      ? 'bg-green-600 hover:bg-green-500 text-white' 
                      : 'bg-gray-600 text-gray-400 cursor-not-allowed'
                  }`}
                >
                  –ó–∞–ø—É—Å—Ç–∏—Ç—å MVP
                </button>
              </div>
              
              <div className="bg-gray-700 p-3 rounded">
                <div className="font-bold">–ù–∞–Ω—è—Ç—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞</div>
                <div className="text-xs text-gray-400">
                  ${2000 + gameState.company.employees * 500}, 10 —Ä–µ–ø—É—Ç–∞—Ü–∏–∏
                </div>
                <button
                  onClick={hireEmployee}
                  disabled={gameState.resources.money < 2000 + gameState.company.employees * 500 || gameState.resources.reputation < 10}
                  className={`mt-2 px-3 py-1 rounded text-sm font-bold transition-colors w-full ${
                    gameState.resources.money >= 2000 + gameState.company.employees * 500 && gameState.resources.reputation >= 10
                      ? 'bg-purple-600 hover:bg-purple-500 text-white' 
                      : 'bg-gray-600 text-gray-400 cursor-not-allowed'
                  }`}
                >
                  –ù–∞–Ω—è—Ç—å
                </button>
              </div>
            </div>
          </div>

          {/* –ü–æ–∫—É–ø–∫–∞ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è */}
          <div className="bg-gray-800 p-4 rounded-lg">
            <h3 className="text-xl font-bold mb-4">üõ†Ô∏è –û–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ</h3>
            <div className="space-y-3">
              {Object.entries(buildings).map(([key, building]) => (
                <div key={key} className="flex items-center justify-between bg-gray-700 p-2 rounded">
                  <div className="flex items-center gap-2">
                    <span className="text-lg">{building.icon}</span>
                    <div>
                      <div className="text-sm font-bold">{building.name}</div>
                      <div className="text-xs text-gray-400">{building.effect}</div>
                    </div>
                  </div>
                  <div className="text-right">
                    <div className="text-xs text-gray-400">x{gameState.buildings[key]}</div>
                    <button
                      onClick={() => buildStructure(key)}
                      disabled={!canBuild(key)}
                      className={`px-2 py-1 rounded text-xs font-bold transition-colors ${
                        canBuild(key) 
                          ? 'bg-green-600 hover:bg-green-500 text-white' 
                          : 'bg-gray-600 text-gray-400 cursor-not-allowed'
                      }`}
                    >
                      –ö—É–ø–∏—Ç—å
                    </button>
                  </div>
                </div>
              ))}
            </div>
          </div>
        </div>

        {/* –ü–æ–¥—Å–∫–∞–∑–∫–∏ */}
        <div className="mt-6 bg-blue-900 border border-blue-600 p-4 rounded-lg">
          <h3 className="font-bold mb-2">üí° –ì–∞–π–¥ –ø–æ —Ä–∞–∑–≤–∏—Ç–∏—é:</h3>
          <ul className="text-sm space-y-1">
            <li>‚Ä¢ <strong>–°–æ–ª–æ-—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫:</strong> –ò–∑—É—á–∞–π—Ç–µ –Ω–∞–≤—ã–∫–∏, –ø–∏—à–∏—Ç–µ –∫–æ–¥, –≥–µ–Ω–µ—Ä–∏—Ä—É–π—Ç–µ –∏–¥–µ–∏</li>
            <li>‚Ä¢ <strong>–§—Ä–∏–ª–∞–Ω—Å–µ—Ä:</strong> –ù–∞–∫–æ–ø–∏—Ç–µ $5000, —Å–æ–∑–¥–∞–≤–∞–π—Ç–µ –ø–µ—Ä–≤—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã</li>
            <li>‚Ä¢ <strong>MVP:</strong> –ó–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–æ–¥—É–∫—Ç –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –∫ —Å—Ç–∞—Ä—Ç–∞–ø—É</li>
            <li>‚Ä¢ <strong>–°—Ç–∞—Ä—Ç–∞–ø:</strong> –ù–∞–Ω–∏–º–∞–π—Ç–µ –∫–æ–º–∞–Ω–¥—É (2+ —á–µ–ª–æ–≤–µ–∫–∞)</li>
            <li>‚Ä¢ <strong>–ö–æ–º–ø–∞–Ω–∏—è:</strong> –†–∞—Å—à–∏—Ä—è–π—Ç–µ—Å—å –¥–æ 10+ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤</li>
            <li>‚Ä¢ <strong>–ö–æ—Ä–ø–æ—Ä–∞—Ü–∏—è:</strong> –ù–∞–∫–æ–ø–∏—Ç–µ $100,000 –¥–ª—è IPO</li>
            <li>‚Ä¢ –í—ã—Å–æ–∫–∏–µ –Ω–∞–≤—ã–∫–∏ —É–≤–µ–ª–∏—á–∏–≤–∞—é—Ç –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ —Ä–µ—Å—É—Ä—Å–æ–≤</li>
            <li>‚Ä¢ –°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏ –ø—Ä–∏–Ω–æ—Å—è—Ç –ø–∞—Å—Å–∏–≤–Ω—ã–π –¥–æ—Ö–æ–¥, –Ω–æ —Ç—Ä–µ–±—É—é—Ç –∑–∞—Ä–ø–ª–∞—Ç—É</li>
          </ul>
        </div>
      </div>
    </div>
  );
};

export default StartupTycoon;
